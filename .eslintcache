[{"/Users/andrea/palette/palette-frontend/palette-frontend/src/index.js":"1","/Users/andrea/palette/palette-frontend/palette-frontend/src/App.js":"2","/Users/andrea/palette/palette-frontend/palette-frontend/src/reportWebVitals.js":"3","/Users/andrea/palette/palette-frontend/palette-frontend/src/Palette.js":"4","/Users/andrea/palette/palette-frontend/palette-frontend/src/SingleColorPalette.js":"5","/Users/andrea/palette/palette-frontend/palette-frontend/src/NewPaletteForm.js":"6","/Users/andrea/palette/palette-frontend/palette-frontend/src/colorHelpers.js":"7","/Users/andrea/palette/palette-frontend/palette-frontend/src/seedPalettes.js":"8","/Users/andrea/palette/palette-frontend/palette-frontend/src/PaletteList.js":"9","/Users/andrea/palette/palette-frontend/palette-frontend/src/PaletteFooter.js":"10","/Users/andrea/palette/palette-frontend/palette-frontend/src/Navbar.js":"11","/Users/andrea/palette/palette-frontend/palette-frontend/src/PaletteFormNav.js":"12","/Users/andrea/palette/palette-frontend/palette-frontend/src/ColorPickerForm.js":"13","/Users/andrea/palette/palette-frontend/palette-frontend/src/DraggableColorList.js":"14","/Users/andrea/palette/palette-frontend/palette-frontend/src/ColorBox.js":"15","/Users/andrea/palette/palette-frontend/palette-frontend/src/styles/PaletteStyles.js":"16","/Users/andrea/palette/palette-frontend/palette-frontend/src/styles/NewPaletteFormStyles.js":"17","/Users/andrea/palette/palette-frontend/palette-frontend/src/MiniPalette.js":"18","/Users/andrea/palette/palette-frontend/palette-frontend/src/styles/PaletteListStyles.js":"19","/Users/andrea/palette/palette-frontend/palette-frontend/src/styles/PaletteFooterStyles.js":"20","/Users/andrea/palette/palette-frontend/palette-frontend/src/styles/NavbarStyles.js":"21","/Users/andrea/palette/palette-frontend/palette-frontend/src/PaletteFormMeta.js":"22","/Users/andrea/palette/palette-frontend/palette-frontend/src/styles/PaletteFormNavStyles.js":"23","/Users/andrea/palette/palette-frontend/palette-frontend/src/DraggableColorBox.js":"24","/Users/andrea/palette/palette-frontend/palette-frontend/src/styles/ColorBoxStyles.js":"25","/Users/andrea/palette/palette-frontend/palette-frontend/src/constants.js":"26","/Users/andrea/palette/palette-frontend/palette-frontend/src/styles/mediaSizes.js":"27","/Users/andrea/palette/palette-frontend/palette-frontend/src/styles/MiniPaletteStyles.js":"28","/Users/andrea/palette/palette-frontend/palette-frontend/src/styles/DraggableColorBoxStyles.js":"29"},{"size":678,"mtime":1613766917000,"results":"30","hashOfConfig":"31"},{"size":3386,"mtime":1613244133000,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1611000799000,"results":"33","hashOfConfig":"31"},{"size":1733,"mtime":1613244133000,"results":"34","hashOfConfig":"31"},{"size":1911,"mtime":1613244133000,"results":"35","hashOfConfig":"31"},{"size":4842,"mtime":1613961081000,"results":"36","hashOfConfig":"31"},{"size":1159,"mtime":1613244133000,"results":"37","hashOfConfig":"31"},{"size":10283,"mtime":1613244133000,"results":"38","hashOfConfig":"31"},{"size":4032,"mtime":1613842325000,"results":"39","hashOfConfig":"31"},{"size":756,"mtime":1613244133000,"results":"40","hashOfConfig":"31"},{"size":2564,"mtime":1613244133000,"results":"41","hashOfConfig":"31"},{"size":3012,"mtime":1613244133000,"results":"42","hashOfConfig":"31"},{"size":3167,"mtime":1613961332000,"results":"43","hashOfConfig":"31"},{"size":645,"mtime":1613244133000,"results":"44","hashOfConfig":"31"},{"size":2016,"mtime":1613244133000,"results":"45","hashOfConfig":"31"},{"size":1327,"mtime":1613766640000,"results":"46","hashOfConfig":"31"},{"size":1360,"mtime":1613766640000,"results":"47","hashOfConfig":"31"},{"size":1469,"mtime":1613244133000,"results":"48","hashOfConfig":"31"},{"size":1377,"mtime":1613842300000,"results":"49","hashOfConfig":"31"},{"size":282,"mtime":1613766640000,"results":"50","hashOfConfig":"31"},{"size":1264,"mtime":1613244133000,"results":"51","hashOfConfig":"31"},{"size":3475,"mtime":1613244133000,"results":"52","hashOfConfig":"31"},{"size":1264,"mtime":1613766640000,"results":"53","hashOfConfig":"31"},{"size":720,"mtime":1613244133000,"results":"54","hashOfConfig":"31"},{"size":3710,"mtime":1613244133000,"results":"55","hashOfConfig":"31"},{"size":32,"mtime":1613244133000,"results":"56","hashOfConfig":"31"},{"size":257,"mtime":1613244133000,"results":"57","hashOfConfig":"31"},{"size":1186,"mtime":1613244133000,"results":"58","hashOfConfig":"31"},{"size":1072,"mtime":1613244133000,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"1b2b77o",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"63"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"63"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"63"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"63"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"63"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"63"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"63"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"63"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"63"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"63"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"63"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"/Users/andrea/palette/palette-frontend/palette-frontend/src/index.js",["133","134","135","136","137"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["138","139"],"/Users/andrea/palette/palette-frontend/palette-frontend/src/App.js",[],"/Users/andrea/palette/palette-frontend/palette-frontend/src/reportWebVitals.js",[],"/Users/andrea/palette/palette-frontend/palette-frontend/src/Palette.js",[],"/Users/andrea/palette/palette-frontend/palette-frontend/src/SingleColorPalette.js",[],"/Users/andrea/palette/palette-frontend/palette-frontend/src/NewPaletteForm.js",["140"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport Button from '@material-ui/core/Button';\nimport DraggableColorList from './DraggableColorList'\nimport { arrayMove } from 'react-sortable-hoc';\nimport PaletteFormNav from './PaletteFormNav';\nimport ColorPickerForm from './ColorPickerForm'\nimport styles from './styles/NewPaletteFormStyles'\n\nclass NewPaletteForm extends Component {\n\n    static defaultProps = {\n      maxColors: 20\n    }\n    state = {\n        open: true,\n        colors: this.props.palettes[0].colors\n    };\n    submitHandler = (newPalette) => {\n      newPalette.id = newPalette.paletteName.toLowerCase().replace(/ /g, \"-\");\n      newPalette.colors = this.state.colors;\n      this.props.savePalette(newPalette);\n      this.props.history.push(\"/\");\n    }          \n    handleDrawerOpen = () => {\n      this.setState({ open: true });\n    };\n    handleDrawerClose = () => {\n      this.setState({ open: false });\n    };\n    addNewColor = (newColor) => {\n        this.setState({ colors: [...this.state.colors, newColor], newColorName: \"\" })\n    }\n    handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value})\n    }\n    removeColor = (colorName) => {\n      this.setState({\n        colors: this.state.colors.filter(color => color.name !== colorName)\n      })\n    }\n    onSortEnd = ({ oldIndex, newIndex }) => {\n      this.setState(({colors}) => ({\n        colors: arrayMove(colors, oldIndex, newIndex)\n      }))\n    }\n    clearColors = () => {\n      this.setState({ colors: [] })\n    }\n    addRandomColor = () => {\n      //pick random color from existing palettes\n      const allColors = this.props.palettes.map(p => p.colors).flat();\n      var rand = Math.floor(Math.random() * allColors.length);\n      const randomColor = allColors[rand];\n      this.setState({ colors: [...this.state.colors, randomColor] });\n    }\n    render() {\n        const { classes, maxColors, palettes } = this.props;\n        const { open, colors } = this.state;\n        const paletteIsFull = colors.length >= maxColors\n        return (\n            <div className={classes.root}>\n            <PaletteFormNav \n              open={open} \n              // classes={classes} \n              palettes={palettes} \n              submitHandler={this.submitHandler}\n              handleDrawerOpen={this.handleDrawerOpen}\n            />\n            <Drawer\n              className={classes.drawer}\n              variant='persistent'\n              anchor='left'\n              open={open}\n              classes={{\n                paper: classes.drawerPaper\n              }}\n            >\n              <div className={classes.drawerHeader}>\n                <IconButton onClick={this.handleDrawerClose}>\n                  <ChevronLeftIcon />\n                </IconButton>\n              </div>\n              <Divider />\n              <div className={classes.container}>\n                <Typography variant='h4' gutterBottom>Design Your Palette</Typography>\n                <div className={classes.buttons}>\n                  <Button \n                    variant='contained' \n                    color='secondary' \n                    onClick={this.clearColors}\n                    className={classes.button}\n                    >\n                    Clear Palette\n                  </Button>\n                  <Button \n                    variant='contained' \n                    color='primary'\n                    onClick={this.addRandomColor}\n                    disabled={paletteIsFull}\n                    className={classes.button}\n                    >\n                    Random Color\n                  </Button>\n                </div>\n                <ColorPickerForm \n                  addNewColor={this.addNewColor} \n                  paletteIsFull={paletteIsFull}\n                  colors={colors}\n                  />\n              </div>\n            </Drawer>\n            <main\n              className={classNames(classes.content, {\n                [classes.contentShift]: open\n              })}\n            >\n              <div className={classes.drawerHeader} />\n                <DraggableColorList \n                  onSortEnd={this.onSortEnd}\n                  axis='xy' \n                  colors={colors} \n                  removeColor={this.removeColor} \n                  distance={15}\n              />\n            </main>\n          </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(NewPaletteForm);","/Users/andrea/palette/palette-frontend/palette-frontend/src/colorHelpers.js",[],"/Users/andrea/palette/palette-frontend/palette-frontend/src/seedPalettes.js",["141"],"export default [\n    {\n      paletteName: \"Material UI Colors\",\n      id: \"material-ui-colors\",\n      emoji: \"🎨\",\n      colors: [\n        { name: \"red\", color: \"#F44336\" },\n        { name: \"pink\", color: \"#E91E63\" },\n        { name: \"purple\", color: \"#9C27B0\" },\n        { name: \"deeppurple\", color: \"#673AB7\" },\n        { name: \"indigo\", color: \"#3F51B5\" },\n        { name: \"blue\", color: \"#2196F3\" },\n        { name: \"lightblue\", color: \"#03A9F4\" },\n        { name: \"cyan\", color: \"#00BCD4\" },\n        { name: \"teal\", color: \"#009688\" },\n        { name: \"green\", color: \"#4CAF50\" },\n        { name: \"lightgreen\", color: \"#8BC34A\" },\n        { name: \"lime\", color: \"#CDDC39\" },\n        { name: \"yellow\", color: \"#FFEB3B\" },\n        { name: \"amber\", color: \"#FFC107\" },\n        { name: \"orange\", color: \"#FF9800\" },\n        { name: \"deeporange\", color: \"#FF5722\" },\n        { name: \"brown\", color: \"#795548\" },\n        { name: \"grey\", color: \"#9E9E9E\" },\n        { name: \"bluegrey\", color: \"#607D8B\" }\n      ]\n    },\n    {\n      paletteName: \"Flat UI Colors v1\",\n      id: \"flat-ui-colors-v1\",\n      emoji: \"🤙\",\n      colors: [\n        { name: \"Turquoise\", color: \"#1abc9c\" },\n        { name: \"Emerald\", color: \"#2ecc71\" },\n        { name: \"PeterRiver\", color: \"#3498db\" },\n        { name: \"Amethyst\", color: \"#9b59b6\" },\n        { name: \"WetAsphalt\", color: \"#34495e\" },\n        { name: \"GreenSea\", color: \"#16a085\" },\n        { name: \"Nephritis\", color: \"#27ae60\" },\n        { name: \"BelizeHole\", color: \"#2980b9\" },\n        { name: \"Wisteria\", color: \"#8e44ad\" },\n        { name: \"MidnightBlue\", color: \"#2c3e50\" },\n        { name: \"SunFlower\", color: \"#f1c40f\" },\n        { name: \"Carrot\", color: \"#e67e22\" },\n        { name: \"Alizarin\", color: \"#e74c3c\" },\n        { name: \"Clouds\", color: \"#ecf0f1\" },\n        { name: \"Concrete\", color: \"#95a5a6\" },\n        { name: \"Orange\", color: \"#f39c12\" },\n        { name: \"Pumpkin\", color: \"#d35400\" },\n        { name: \"Pomegranate\", color: \"#c0392b\" },\n        { name: \"Silver\", color: \"#bdc3c7\" },\n        { name: \"Asbestos\", color: \"#7f8c8d\" }\n      ]\n    },\n    {\n      paletteName: \"Flat UI Colors Dutch\",\n      id: \"flat-ui-colors-dutch\",\n      emoji: \"🇳🇱\",\n      colors: [\n        { name: \"Sunflower\", color: \"#FFC312\" },\n        { name: \"Energos\", color: \"#C4E538\" },\n        { name: \"BlueMartina\", color: \"#12CBC4\" },\n        { name: \"LavenderRose\", color: \"#FDA7DF\" },\n        { name: \"BaraRose\", color: \"#ED4C67\" },\n        { name: \"RadiantYellow\", color: \"#F79F1F\" },\n        { name: \"AndroidGreen\", color: \"#A3CB38\" },\n        { name: \"MediterraneanSea\", color: \"#1289A7\" },\n        { name: \"LavenderTea\", color: \"#D980FA\" },\n        { name: \"VerryBerry\", color: \"#B53471\" },\n        { name: \"PuffinsBill\", color: \"#EE5A24\" },\n        { name: \"PixelatedGrass\", color: \"#009432\" },\n        { name: \"MerchantMarineBlue\", color: \"#0652DD\" },\n        { name: \"ForgottenPurple\", color: \"#9980FA\" },\n        { name: \"HollyHock\", color: \"#833471\" },\n        { name: \"RedPigment\", color: \"#EA2027\" },\n        { name: \"TurkishAqua\", color: \"#006266\" },\n        { name: \"20000LeaguesUnderTheSea\", color: \"#1B1464\" },\n        { name: \"CircumorbitalRing\", color: \"#5758BB\" },\n        { name: \"MagentaPurple\", color: \"#6F1E51\" }\n      ]\n    },\n    {\n      paletteName: \"Flat UI Colors American\",\n      id: \"flat-ui-colors-american\",\n      emoji: \"🇺🇸\",\n      colors: [\n        { name: \"LightGreenishBlue\", color: \"#55efc4\" },\n        { name: \"FadedPoster\", color: \"#81ecec\" },\n        { name: \"GreenDarnerTail\", color: \"#74b9ff\" },\n        { name: \"ShyMoment\", color: \"#a29bfe\" },\n        { name: \"CityLights\", color: \"#dfe6e9\" },\n        { name: \"MintLeaf\", color: \"#00b894\" },\n        { name: \"RobinsEggBlue\", color: \"#00cec9\" },\n        { name: \"ElectronBlue\", color: \"#0984e3\" },\n        { name: \"ExodusFruit\", color: \"#6c5ce7\" },\n        { name: \"SoothingBreeze\", color: \"#b2bec3\" },\n        { name: \"SourLemon\", color: \"#ffeaa7\" },\n        { name: \"FirstDate\", color: \"#fab1a0\" },\n        { name: \"PinkGlamour\", color: \"#ff7675\" },\n        { name: \"Pico8Pink\", color: \"#fd79a8\" },\n        { name: \"AmericanRiver\", color: \"#636e72\" },\n        { name: \"BrightYarrow\", color: \"#fdcb6e\" },\n        { name: \"OrangeVille\", color: \"#e17055\" },\n        { name: \"Chi-Gong\", color: \"#d63031\" },\n        { name: \"PrunusAvium\", color: \"#e84393\" },\n        { name: \"DraculaOrchid\", color: \"#2d3436\" }\n      ]\n    },\n    {\n      paletteName: \"Flat UI Colors Aussie\",\n      id: \"flat-ui-colors-aussie\",\n      emoji: \"🇦🇺\",\n      colors: [\n        { name: \"Beekeeper\", color: \"#f6e58d\" },\n        { name: \"SpicedNectarine\", color: \"#ffbe76\" },\n        { name: \"PinkGlamour\", color: \"#ff7979\" },\n        { name: \"JuneBud\", color: \"#badc58\" },\n        { name: \"CoastalBreeze\", color: \"#dff9fb\" },\n        { name: \"Turbo\", color: \"#f9ca24\" },\n        { name: \"QuinceJelly\", color: \"#f0932b\" },\n        { name: \"CarminePink\", color: \"#eb4d4b\" },\n        { name: \"PureApple\", color: \"#6ab04c\" },\n        { name: \"HintOfIcePack\", color: \"#c7ecee\" },\n        { name: \"MiddleBlue\", color: \"#7ed6df\" },\n        { name: \"Heliotrope\", color: \"#e056fd\" },\n        { name: \"ExodusFruit\", color: \"#686de0\" },\n        { name: \"DeepKoamaru\", color: \"#30336b\" },\n        { name: \"SoaringEagle\", color: \"#95afc0\" },\n        { name: \"GreenlandGreen\", color: \"#22a6b3\" },\n        { name: \"SteelPink\", color: \"#be2edd\" },\n        { name: \"Blurple\", color: \"#4834d4\" },\n        { name: \"DeepCove\", color: \"#130f40\" },\n        { name: \"WizardGrey\", color: \"#535c68\" }\n      ]\n    },\n    {\n      paletteName: \"Flat UI Colors British\",\n      id: \"flat-ui-colors-british\",\n      emoji: \"🇬🇧\",\n      colors: [\n        { name: \"ProtossPylon\", color: \"#00a8ff\" },\n        { name: \"Periwinkle\", color: \"#9c88ff\" },\n        { name: \"Rise-N-Shine\", color: \"#fbc531\" },\n        { name: \"DownloadProgress\", color: \"#4cd137\" },\n        { name: \"Seabrook\", color: \"#487eb0\" },\n        { name: \"VanaDylBlue\", color: \"#0097e6\" },\n        { name: \"MattPurple\", color: \"#8c7ae6\" },\n        { name: \"NanohanachaGold\", color: \"#e1b12c\" },\n        { name: \"SkirretGreen\", color: \"#44bd32\" },\n        { name: \"Naval\", color: \"#40739e\" },\n        { name: \"NasturcianFlower\", color: \"#e84118\" },\n        { name: \"LynxWhite\", color: \"#f5f6fa\" },\n        { name: \"BlueberrySoda\", color: \"#7f8fa6\" },\n        { name: \"MazarineBlue\", color: \"#273c75\" },\n        { name: \"BlueNights\", color: \"#353b48\" },\n        { name: \"HarleyOrange\", color: \"#c23616\" },\n        { name: \"HintOfPensive\", color: \"#dcdde1\" },\n        { name: \"ChainGangGrey\", color: \"#718093\" },\n        { name: \"PicoVoid\", color: \"#192a56\" },\n        { name: \"ElectroMagnetic\", color: \"#2f3640\" }\n      ]\n    },\n    {\n      paletteName: \"Flat UI Colors Spanish\",\n      id: \"flat-ui-colors-spanish\",\n      emoji: \"🇪🇸\",\n      colors: [\n        { name: \"JacksonsPurple\", color: \"#40407a\" },\n        { name: \"C64Purple\", color: \"#706fd3\" },\n        { name: \"SwanWhite\", color: \"#f7f1e3\" },\n        { name: \"SummerSky\", color: \"#34ace0\" },\n        { name: \"CelestialGreen\", color: \"#33d9b2\" },\n        { name: \"LuckyPoint\", color: \"#2c2c54\" },\n        { name: \"Liberty\", color: \"#474787\" },\n        { name: \"HotStone\", color: \"#aaa69d\" },\n        { name: \"DevilBlue\", color: \"#227093\" },\n        { name: \"PalmSpringsSplash\", color: \"#218c74\" },\n        { name: \"FlourescentRed\", color: \"#ff5252\" },\n        { name: \"SyntheticPumpkin\", color: \"#ff793f\" },\n        { name: \"CrocodileTooth\", color: \"#d1ccc0\" },\n        { name: \"MandarinSorbet\", color: \"#ffb142\" },\n        { name: \"SpicedButterNut\", color: \"#ffda79\" },\n        { name: \"EyeOfNewt\", color: \"#b33939\" },\n        { name: \"ChileanFire\", color: \"#cd6133\" },\n        { name: \"GreyPorcelain\", color: \"#84817a\" },\n        { name: \"AlamedaOchre\", color: \"#cc8e35\" },\n        { name: \"Desert\", color: \"#ccae62\" }\n      ]\n    },\n    {\n      paletteName: \"Flat UI Colors Indian\",\n      id: \"flat-ui-colors-indian\",\n      emoji: \"🇮🇳\",\n      colors: [\n        { name: \"OrchidOrange\", color: \"#FEA47F\" },\n        { name: \"SpiroDiscoBall\", color: \"#25CCF7\" },\n        { name: \"HoneyGlow\", color: \"#EAB543\" },\n        { name: \"SweetGarden\", color: \"#55E6C1\" },\n        { name: \"FallingStar\", color: \"#CAD3C8\" },\n        { name: \"RichGardenia\", color: \"#F97F51\" },\n        { name: \"ClearChill\", color: \"#1B9CFC\" },\n        { name: \"WhitePepper\", color: \"#F8EFBA\" },\n        { name: \"Keppel\", color: \"#58B19F\" },\n        { name: \"ShipsOfficer\", color: \"#2C3A47\" },\n        { name: \"FieryFuchsia\", color: \"#B33771\" },\n        { name: \"BlueBell\", color: \"#3B3B98\" },\n        { name: \"GeorgiaPeach\", color: \"#FD7272\" },\n        { name: \"OasisStream\", color: \"#9AECDB\" },\n        { name: \"BrightUbe\", color: \"#D6A2E8\" },\n        { name: \"MagentaPurple\", color: \"#6D214F\" },\n        { name: \"EndingNavyBlue\", color: \"#182C61\" },\n        { name: \"SasquatchSocks\", color: \"#FC427B\" },\n        { name: \"PineGlade\", color: \"#BDC581\" },\n        { name: \"HighlighterLavender\", color: \"#82589F\" }\n      ]\n    },\n    {\n      paletteName: \"Flat UI Colors French\",\n      id: \"flat-ui-colors-french\",\n      emoji: \"🇫🇷\",\n      colors: [\n        { name: \"FlatFlesh\", color: \"#fad390\" },\n        { name: \"MelonMelody\", color: \"#f8c291\" },\n        { name: \"Livid\", color: \"#6a89cc\" },\n        { name: \"Spray\", color: \"#82ccdd\" },\n        { name: \"ParadiseGreen\", color: \"#b8e994\" },\n        { name: \"SquashBlossom\", color: \"#f6b93b\" },\n        { name: \"MandarinRed\", color: \"#e55039\" },\n        { name: \"AzraqBlue\", color: \"#4a69bd\" },\n        { name: \"Dupain\", color: \"#60a3bc\" },\n        { name: \"AuroraGreen\", color: \"#78e08f\" },\n        { name: \"IcelandPoppy\", color: \"#fa983a\" },\n        { name: \"TomatoRed\", color: \"#eb2f06\" },\n        { name: \"YueGuangBlue\", color: \"#1e3799\" },\n        { name: \"GoodSamaritan\", color: \"#3c6382\" },\n        { name: \"Waterfall\", color: \"#38ada9\" },\n        { name: \"CarrotOrange\", color: \"#e58e26\" },\n        { name: \"JalapenoRed\", color: \"#b71540\" },\n        { name: \"DarkSapphire\", color: \"#0c2461\" },\n        { name: \"ForestBlues\", color: \"#0a3d62\" },\n        { name: \"ReefEncounter\", color: \"#079992\" }\n      ]\n    }\n  ];","/Users/andrea/palette/palette-frontend/palette-frontend/src/PaletteList.js",["142","143","144"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport MiniPalette from './MiniPalette'\nimport { withStyles } from '@material-ui/styles'\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport styles from './styles/PaletteListStyles'\nimport blue from '@material-ui/core/colors/blue'\nimport red from '@material-ui/core/colors/red'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\nclass PaletteList extends Component {\n\n    state = {\n        deleteDialogOpen: false,\n        paletteId: ''\n    }\n\n\n    openModal = (id) => {\n        this.setState({\n            deleteDialogOpen: true,\n            paletteId: id\n        })\n    }\n    closeModal = () => {\n        this.setState({\n            deleteDialogOpen: false,\n            paletteId: ''\n        })\n    }\n\n    goToPalette(id){\n        this.props.history.push(`/palette/${id}`)\n    }    \n\n    deleteHandler = () => {\n        this.props.deletePalette(this.state.paletteId)\n        this.closeModal()\n    }\n\n    render() {\n        const { paletteList, classes, deletePalette } = this.props\n        const { deleteDialogOpen, paletteId } = this.state\n        return (\n            <div className={classes.root}>\n                <div className={classes.container}>\n                    <nav className={classes.nav}>\n                        <h1>paLit</h1>\n                        <Link to='/palette/new'>\n                            Create Palette\n                        </Link>\n                    </nav>\n                    <TransitionGroup className={classes.palettes}>\n                        {paletteList.map(palette => (\n                            <CSSTransition key={palette.id} classNames='fade' timeout={500}>\n                                <MiniPalette \n                                {...palette} \n                                handleClick={() => this.goToPalette(palette.id)}\n                                // deleteHandler={deletePalette}\n                                id={palette.id}\n                                key={palette.id}\n                                openModal={this.openModal}\n                                />\n                            </CSSTransition>\n                        ))}\n                    </TransitionGroup>\n                </div>\n                <Dialog open={deleteDialogOpen} onClose={this.closeModal}>\n                    <DialogTitle id='delete-palette-dialog'>Delete this Palette?</DialogTitle>\n                    <List>\n                        <ListItem button onClick={this.deleteHandler}>\n                            <ListItemAvatar>\n                                <Avatar style={{backgroundColor: blue[100], color: blue[700]}}>\n                                    <CheckIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText>Delete</ListItemText>\n                        </ListItem>\n                    </List>\n                    <List>\n                        <ListItem button onClick={this.closeModal}>\n                            <ListItemAvatar>\n                                <Avatar style={{backgroundColor: red[100], color: red[700]}}>\n                                    <CloseIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText>Cancel</ListItemText>\n                        </ListItem>\n                    </List>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(PaletteList);","/Users/andrea/palette/palette-frontend/palette-frontend/src/PaletteFooter.js",[],"/Users/andrea/palette/palette-frontend/palette-frontend/src/Navbar.js",[],"/Users/andrea/palette/palette-frontend/palette-frontend/src/PaletteFormNav.js",["145","146"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport PaletteFormMeta from './PaletteFormMeta'\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\nimport styles from './styles/PaletteFormNavStyles'\nclass PaletteFormNav extends Component {\n\n    state = {\n        newPaletteName: \"\",\n        formShowing: false\n    }\n\n    handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value})\n    }\n    showForm = () => {\n      this.setState({ formShowing: true })\n    }\n    hideForm = () => {\n      this.setState({ formShowing: false })\n    }\n\n    render() {\n        const { classes, open, palettes, submitHandler } = this.props\n        const { newPaletteName } = this.state\n        return (\n          <div className={classes.root}>\n          <CssBaseline />\n          <AppBar\n            position='fixed'\n            color='default'\n            className={classNames(classes.appBar, {\n              [classes.appBarShift]: open\n            })}\n          >\n            <Toolbar disableGutters={!open}>\n              <IconButton\n                color='inherit'\n                aria-label='Open drawer'\n                onClick={this.props.handleDrawerOpen}\n                className={classNames(classes.menuButton, {\n                  [classes.hide]: open\n                })}\n              >\n                <MenuOpenIcon />\n              </IconButton>\n              <Typography variant='h6' color='inherit' noWrap>\n                Create a New Palette\n              </Typography>\n            </Toolbar>\n            <div className={classes.navBtns}>\n              {/* <PaletteFormMeta palettes={palettes} handleSubmit={handleSubmit}/> */}\n              <Link to='/'>\n              <Button \n                variant='contained' \n                color='secondary'\n                className={classes.button}\n              >\n\n                {/* <Button variant='contained' color='secondary'> */}\n                  Go Back\n                </Button>\n              </Link>\n              <Button\n                variant='contained'\n                color='primary'\n                onClick={this.showForm}\n                className={classes.button}\n              >           \n                Save\n              </Button>\n            </div>\n          </AppBar>\n          {this.state.formShowing && (\n            <PaletteFormMeta palettes={palettes} hideForm={this.hideForm} submitHandler={submitHandler} />\n          )}\n        </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(PaletteFormNav);","/Users/andrea/palette/palette-frontend/palette-frontend/src/ColorPickerForm.js",[],"/Users/andrea/palette/palette-frontend/palette-frontend/src/DraggableColorList.js",[],"/Users/andrea/palette/palette-frontend/palette-frontend/src/ColorBox.js",["147"],"import React, { Component } from 'react';\nimport {CopyToClipboard} from 'react-copy-to-clipboard'\nimport { Link } from 'react-router-dom'\nimport chroma from 'chroma-js'\nimport { withStyles } from '@material-ui/styles'\nimport styles from './styles/ColorBoxStyles'\n\n\nclass ColorBox extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { copied: false };\n        this.changeCopyState = this.changeCopyState.bind(this)\n    }\n\n    changeCopyState(){\n        this.setState({ copied: true}, () => {\n            setTimeout(() => this.setState({ copied: false }), 1500)\n        })\n    }\n\n    render() {\n        const { name, background, moreUrl, showingFullPalette, classes } = this.props\n        const { copied } = this.state\n        return (\n            <CopyToClipboard text={background} onCopy={this.changeCopyState}>\n                <div style={{ background }} className={classes.ColorBox}>\n                    <div style={{ background }}  className={`${classes.copyOverlay} ${copied && classes.showOverlay}`}></div>\n                    <div className={`${classes.copyMessage} ${copied && classes.showMessage}`}>\n                        <h1>Copied to Clipboard!</h1>\n                        <p className={classes.copyText}>{this.props.background}</p>\n                    </div>\n                    <div className='copy-container'>\n                        <div className={classes.boxContent}>\n                            <span className={classes.colorName}>{name}</span>\n                        </div>\n                        </div>\n                            <button className={classes.copyButton}>Copy</button>\n                    {showingFullPalette && (\n                        <Link to={moreUrl} onClick={e => e.stopPropagation()}>\n                        <span className={classes.seeMore}>MORE</span>\n                        </Link>\n                        )}\n                </div>\n            </CopyToClipboard>\n        );\n    }\n}\n\nexport default withStyles(styles)(ColorBox);","/Users/andrea/palette/palette-frontend/palette-frontend/src/styles/PaletteStyles.js",["148"],"import sizes from './mediaSizes'\nexport default {\n    Palette: {\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        backgroundColor: \"#FFF8E7\"\n    },\n    colors: {\n        height: \"90%\"\n    },\n    goBack: {\n        width: \"20%\",\n        height: \"50%\",\n        margin: \"0 auto\",\n        display: \"inline-block\",\n        position: \"relative\",\n        cursor: \"pointer\",\n        marginBottom: \"-3.5px\",\n        opacity: 1,\n        backgroundColor: \"black\",\n        \"& a\": {\n          color: \"white\",\n          width: \"100px\",\n          height: \"30px\",\n          position: \"absolute\",\n          display: \"inline-block\",\n          top: \"50%\",\n          left: \"50%\",\n          marginLeft: \"-50px\",\n          marginTop: \"-15px\",\n          textAlign: \"center\",\n          outline: \"none\",\n          background: \"rgba(255, 255, 255, 0.3)\",\n          fontSize: \"1rem\",\n          lineHeight: \"30px\",\n          textTransform: \"uppercase\",\n          border: \"none\",\n          textDecoration: \"none\"\n        },\n        [sizes.down('lg')]: {\n            width: \"25%\",\n            height: \"33.3333%\"\n        },\n        [sizes.down('md')]: {\n            width: \"50%\",\n            height: \"20%\"\n        },\n        [sizes.down('xs')]: {\n            width: \"100%\",\n            height: \"10%\"\n        }\n    }\n}","/Users/andrea/palette/palette-frontend/palette-frontend/src/styles/NewPaletteFormStyles.js",[],"/Users/andrea/palette/palette-frontend/palette-frontend/src/MiniPalette.js",[],"/Users/andrea/palette/palette-frontend/palette-frontend/src/styles/PaletteListStyles.js",["149"],"import sizes from './mediaSizes'\nimport backGround from './backGround.svg'\nexport default {\n    \"@global\": {\n      \".fade-exit\": {\n        opacity: 1\n      },\n      \".fade-exit-active\": {\n        opacity: 0,\n        transition: \"opacity 500ms ease-out\"\n      }\n    },\n    root: {\n      height: \"100vh\",\n      display: \"flex\",\n      alignItems: \"flex-start\",\n      justifyContent: \"center\",\n     /* background by SVGBackgrounds.com */\n      backgroundColor: \"#ffe0f9\",\n      backgroundImage: `url(${backGround})`,\n      overflow: \"scroll\"\n    },\n    container: {\n      width: \"50%\",\n      display: \"flex\",\n      alignItems: \"flex-start\",\n      flexDirection: \"column\",\n      flexWrap: \"wrap\",\n      [sizes.down(\"xl\")]: {\n        width: \"80%\"\n      },\n      [sizes.down(\"xs\")]: {\n        width: \"75%\"\n      }\n    },\n    nav: {\n      display: \"flex\",\n      width: \"100%\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      color: \"#1CAD35\",\n      \"& a\": {\n        color: \"#1CAD35\"\n      }\n    },\n    palettes: {\n      boxSizing: \"border-box\",\n      width: \"100%\",\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(3, 30%)\",\n      gridGap: \"2.5rem\",\n      [sizes.down(\"md\")]: {\n        gridTemplateColumns: \"repeat(2, 50%)\"\n      },\n      [sizes.down(\"xs\")]: {\n        gridTemplateColumns: \"repeat(1, 100%)\",\n        gridGap: \"1rem\"\n      }\n    }\n  };","/Users/andrea/palette/palette-frontend/palette-frontend/src/styles/PaletteFooterStyles.js",["150"],"export default {\n    PaletteFooter: {\n      backgroundColor: \"#FFF8E7\",\n      height: \"5vh\",\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      alignItems: \"center\",\n      fontWeight: \"bold\"\n    },\n    emoji: {\n      fontSize: \"1.5rem\",\n      margin: \"0 1rem\"\n    }\n  };","/Users/andrea/palette/palette-frontend/palette-frontend/src/styles/NavbarStyles.js",["151"],"import sizes from './mediaSizes'\nexport default {\n    Navbar: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      height: \"6vh\"\n    },\n    logo: {\n      marginRight: \"15px\",\n      padding: \"0 13px\",\n      fontSize: \"22px\",\n      backgroundColor: \"#eceff1\",\n      fontFamily: \"Roboto\",\n      height: \"100%\",\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& a\": {\n        textDecoration: \"none\",\n        color: \"black\"\n      },\n      [sizes.down('xs')]: {\n        display: \"none\"\n      }\n    },\n    slider: {\n      width: \"340px\",\n      margin: \"0 10px\",\n      display: \"inline-block\",\n      \"& .rc-slider-track\": {\n        backgroundColor: \"transparent\"\n      },\n      \"& .rc-slider-rail\": {\n        height: \"8px\"\n      },\n      \"& .rc-slider-handle, .rc-slider-handle:active, .rc-slider-handle:focus,.rc-slider-handle:hover\": {\n        backgroundColor: \"green\",\n        outline: \"none\",\n        border: \"2px solid green\",\n        boxShadow: \"none\",\n        width: \"13px\",\n        height: \"13px\",\n        marginLeft: \"-7px\",\n        marginTop: \"-3px\"\n      },\n      [sizes.down('md')]: {\n        width: \"150px\"\n      }\n    },\n    selectContainer: {\n      marginLeft: \"auto\",\n      marginRight: \"1rem\"\n    }\n  };","/Users/andrea/palette/palette-frontend/palette-frontend/src/PaletteFormMeta.js",["152","153"],"import React, { Component } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { Picker } from 'emoji-mart';\nimport 'emoji-mart/css/emoji-mart.css';\n\nclass PaletteFormMeta extends Component {\n\n    state = {\n        stage: \"form\",\n        newPaletteName: \"\"\n    }\n\n    componentDidMount() {\n        ValidatorForm.addValidationRule(\"isPaletteNameUnique\", value =>\n          this.props.palettes.every(\n            ({ paletteName }) => paletteName.toLowerCase() !== value.toLowerCase()\n          )\n        );\n    }\n    \n\n    handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n    handleClickOpen = () => {\n        this.setState({ open: true })\n    }\n    handleClose = () => {\n        this.setState({ open: false })\n    }\n    showEmojiPicker = () => {\n        this.setState({ stage: \"emoji\" })\n    }\n    savePalette = (emoji) => {\n        const newPalette = {\n            paletteName: this.state.newPaletteName,\n            emoji: emoji.native\n        }\n        this.props.submitHandler(newPalette)\n    }\n\n    render() {\n        const { newPaletteName } = this.state;\n        const { hideForm, submitHandler} = this.props\n        return (\n          <div>\n            <Dialog open={this.state.stage === 'emoji'} onClose={hideForm}>\n              <DialogTitle id='form-dialog-title'>\n                Choose an Emoji\n              </DialogTitle>\n              <Picker \n                title='Choose an Emoji for you Palette' \n                emojiTooltip={true} \n                onSelect={this.savePalette} \n                enableFrequentEmojiSort={true} \n              />\n            </Dialog>\n            <Dialog\n              open={this.state.stage === 'form'}\n              onClose={hideForm}\n              aria-labelledby='form-dialog-title'\n            >\n              <DialogTitle id='form-dialog-title'>Choose a Palette Name</DialogTitle>\n              <ValidatorForm onSubmit={this.showEmojiPicker}>\n                <DialogContent>\n                  <DialogContentText>\n                    Please enter a name for your new Palette. It must be unique.\n                  </DialogContentText>\n                <TextValidator\n                  label='Palette Name'\n                  value={newPaletteName}\n                  name='newPaletteName'\n                  onChange={this.handleChange}\n                  fullWidth\n                  margin='normal'\n                  validators={[\"required\", \"isPaletteNameUnique\"]}\n                  errorMessages={[\"Enter Palette Name\", \"Name already used\"]}\n                />\n                </DialogContent>\n                <DialogActions>\n                  <Button onClick={hideForm} color='primary'>\n                    Cancel\n                  </Button>\n                  <Button variant='contained' color='primary' type='submit'>\n                    Save Palette\n                  </Button>\n                </DialogActions>\n              </ValidatorForm>\n            </Dialog>\n          </div>\n        );\n      }\n}\n\nexport default PaletteFormMeta;","/Users/andrea/palette/palette-frontend/palette-frontend/src/styles/PaletteFormNavStyles.js",[],"/Users/andrea/palette/palette-frontend/palette-frontend/src/DraggableColorBox.js",[],"/Users/andrea/palette/palette-frontend/palette-frontend/src/styles/ColorBoxStyles.js",["154"],"import chroma from 'chroma-js'\nimport sizes from './mediaSizes'\nexport default {\n    ColorBox: {\n        width: \"20%\",\n        height: props => (props.showingFullPalette ? \"25%\" : \"50%\"),\n        margin: \"0 auto\",\n        display: \"inline-block\",\n        position: \"relative\",\n        cursor: \"pointer\",\n        marginBottom: \"-3.5px\",\n        \"&:hover button\": {\n          opacity: 1\n        },\n        [sizes.down(\"lg\")]: {\n            width: \"25%\",\n            height: props => (props.showingFullPalette ? \"20%\" : \"33.33333%\")\n        },\n        [sizes.down(\"md\")]: {\n            width: \"50%\",\n            height: props => (props.showingFullPalette ? \"10%\" : \"20%\")\n          },\n        [sizes.down(\"xs\")]: {\n            width: \"100%\",\n            height: props => (props.showingFullPalette ? \"5%\" : \"10%\")\n          }\n    },\n    copyText: {\n        color: props =>\n          chroma(props.background).luminance() >= 0.7 ? \"black\" : \"white\"\n    },\n    colorName: {\n        color: props =>\n          chroma(props.background).luminance() <= 0.08 ? \"white\" : \"black\"\n    },\n    seeMore: {\n        color: props =>\n          chroma(props.background).luminance() >= 0.7 ? \"rgba(0,0,0,0.6)\" : \"white\",\n        background: \"rgba(255, 255, 255, 0.3)\",\n        position: \"absolute\",\n        border: \"none\",\n        right: \"0px\",\n        bottom: \"0px\",\n        width: \"60px\",\n        height: \"30px\",\n        textAlign: \"center\",\n        lineHeight: \"30px\",\n        textTransform: \"uppercase\"\n    },\n    copyButton: {\n        color: props =>\n          chroma(props.background).luminance() >= 0.7 ? \"rgba(0,0,0,0.6)\" : \"white\",\n        width: \"100px\",\n        height: \"30px\",\n        position: \"absolute\",\n        display: \"inline-block\",\n        top: \"50%\",\n        left: \"50%\",\n        marginLeft: \"-50px\",\n        marginTop: \"-15px\",\n        textAlign: \"center\",\n        outline: \"none\",\n        background: \"rgba(255, 255, 255, 0.3)\",\n        fontSize: \"1rem\",\n        lineHeight: \"30px\",\n        textTransform: \"uppercase\",\n        border: \"none\",\n        textDecoration: \"none\",\n        opacity: 0\n    },\n    boxContent: {\n        position: \"absolute\",\n        width: \"100%\",\n        left: \"0px\",\n        bottom: \"0px\",\n        padding: \"10px\",\n        color: \"black\",\n        letterSpacing: \"1px\",\n        textTransform: \"uppercase\",\n        fontSize: \"12px\"\n    },\n    copyOverlay: {\n        opacity: \"0\",\n        zIndex: \"0\",\n        width: \"100%\",\n        height: \"100%\",\n        transition: \"transform 0.6s ease-in-out\",\n        transform: \"scale(0.1)\"\n    },\n    showOverlay: {\n        opacity: \"1\",\n        transform: \"scale(50)\",\n        zIndex: \"10\",\n        position: \"absolute\"\n    },\n    copyMessage: {\n        position: \"fixed\",\n        left: \"0\",\n        right: \"0\",\n        top: \"0\",\n        bottom: \"0\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        fontSize: \"4rem\",\n        transform: \"scale(0.1)\",\n        opacity: \"0\",\n        color: \"white\",\n        \"& h1\": {\n            fontWeight: \"400\",\n            textShadow: \"1px 2px black\",\n            background: \"rgba(255, 255, 255, 0.2)\",\n            width: \"100%\",\n            textAlign: \"center\",\n            marginBottom: \"0\",\n            padding: \"1rem\",\n            textTransform: \"uppercase\",\n            [sizes.down('xs')]: {\n                fontSize: \"6rem\"\n            }\n        },\n        \"& p\": {\n            fontSize: \"2rem\",\n            fontWeight: \"100\"\n        }\n    },\n    showMessage: {\n        opacity: \"1\",\n        transform: \"scale(1)\",\n        zIndex: \"25\",\n        transition: \"all 0.4s ease-in-out\",\n        transitionDelay: \"0.3s\"\n    }\t  \n}","/Users/andrea/palette/palette-frontend/palette-frontend/src/constants.js",[],"/Users/andrea/palette/palette-frontend/palette-frontend/src/styles/mediaSizes.js",["155"],"export default {\n    up() {},\n    down(size) {\n      const sizes = {\n        xs: \"575.98px\",\n        sm: \"767.98px\",\n        md: \"991.98px\",\n        lg: \"1199.98px\",\n        xl: \"1600px\"\n      };\n      return `@media (max-width: ${sizes[size]})`;\n    }\n  };","/Users/andrea/palette/palette-frontend/palette-frontend/src/styles/MiniPaletteStyles.js",["156"],"export default {\n    root: {\n      backgroundColor: \"white\",\n      border: \"1px solid black\",\n      borderRadius: \"5px\",\n      padding: \"0.5rem\",\n      position: \"relative\",\n      overflow: \"hidden\",\n      cursor: \"pointer\",\n      \"&:hover svg\": {\n        opacity: 1\n      }\n    },\n    colors: {\n      backgroundColor: \"#dae1e4\",\n      height: \"150px\",\n      width: \"100%\",\n      borderRadius: \"5px\",\n      overflow: \"hidden\"\n    },\n    title: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      margin: \"0\",\n      color: \"black\",\n      paddingTop: \"0.5rem\",\n      fontSize: \"1rem\",\n      position: \"relative\"\n    },\n    emoji: {\n      marginLeft: \"0.5rem\",\n      fontSize: \"1.5rem\"\n    },\n    miniColor: {\n      height: \"25%\",\n      width: \"20%\",\n      display: \"inline-block\",\n      margin: \"0 auto\",\n      position: \"relative\",\n      marginBottom: \"-3.5px\"\n    },\n    delete: {\n\n    },\n    deleteIcon: {\n      color: \"white\",\n      backgroundColor: \"#eb3d30\",\n      width: \"20px\",\n      height: \"20px\",\n      position: \"absolute\",\n      right: \"0px\",\n      top: \"0px\",\n      padding: \"10px\",\n      zIndex: 10,\n      opacity: 0\n    }\n  };","/Users/andrea/palette/palette-frontend/palette-frontend/src/styles/DraggableColorBoxStyles.js",[],{"ruleId":"157","severity":1,"message":"158","line":7,"column":10,"nodeType":"159","messageId":"160","endLine":7,"endColumn":18},{"ruleId":"157","severity":1,"message":"161","line":8,"column":10,"nodeType":"159","messageId":"160","endLine":8,"endColumn":21},{"ruleId":"157","severity":1,"message":"162","line":8,"column":23,"nodeType":"159","messageId":"160","endLine":8,"endColumn":38},{"ruleId":"157","severity":1,"message":"163","line":8,"column":40,"nodeType":"159","messageId":"160","endLine":8,"endColumn":47},{"ruleId":"157","severity":1,"message":"164","line":9,"column":8,"nodeType":"159","messageId":"160","endLine":9,"endColumn":13},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"157","severity":1,"message":"169","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":14},{"ruleId":"170","severity":1,"message":"171","line":1,"column":1,"nodeType":"172","endLine":244,"endColumn":5},{"ruleId":"157","severity":1,"message":"173","line":6,"column":8,"nodeType":"159","messageId":"160","endLine":6,"endColumn":14},{"ruleId":"157","severity":1,"message":"174","line":50,"column":39,"nodeType":"159","messageId":"160","endLine":50,"endColumn":52},{"ruleId":"157","severity":1,"message":"175","line":51,"column":35,"nodeType":"159","messageId":"160","endLine":51,"endColumn":44},{"ruleId":"157","severity":1,"message":"176","line":9,"column":8,"nodeType":"159","messageId":"160","endLine":9,"endColumn":16},{"ruleId":"157","severity":1,"message":"177","line":34,"column":17,"nodeType":"159","messageId":"160","endLine":34,"endColumn":31},{"ruleId":"157","severity":1,"message":"178","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":14},{"ruleId":"170","severity":1,"message":"179","line":2,"column":1,"nodeType":"172","endLine":54,"endColumn":2},{"ruleId":"170","severity":1,"message":"179","line":3,"column":1,"nodeType":"172","endLine":60,"endColumn":5},{"ruleId":"170","severity":1,"message":"179","line":1,"column":1,"nodeType":"172","endLine":14,"endColumn":5},{"ruleId":"170","severity":1,"message":"179","line":2,"column":1,"nodeType":"172","endLine":54,"endColumn":5},{"ruleId":"157","severity":1,"message":"180","line":3,"column":8,"nodeType":"159","messageId":"160","endLine":3,"endColumn":17},{"ruleId":"157","severity":1,"message":"181","line":51,"column":27,"nodeType":"159","messageId":"160","endLine":51,"endColumn":40},{"ruleId":"170","severity":1,"message":"179","line":3,"column":1,"nodeType":"172","endLine":135,"endColumn":2},{"ruleId":"170","severity":1,"message":"179","line":1,"column":1,"nodeType":"172","endLine":13,"endColumn":5},{"ruleId":"170","severity":1,"message":"179","line":1,"column":1,"nodeType":"172","endLine":58,"endColumn":5},"no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","'createStore' is defined but never used.","'applyMiddleware' is defined but never used.","'compose' is defined but never used.","'thunk' is defined but never used.","no-native-reassign",["182"],"no-negated-in-lhs",["183"],"'Link' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'Button' is defined but never used.","'deletePalette' is assigned a value but never used.","'paletteId' is assigned a value but never used.","'MenuIcon' is defined but never used.","'newPaletteName' is assigned a value but never used.","'chroma' is defined but never used.","Assign object to a variable before exporting as module default","'TextField' is defined but never used.","'submitHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]